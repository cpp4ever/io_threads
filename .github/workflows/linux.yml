# Part of the io_threads project (https://github.com/cpp4ever/io_threads), under the MIT License
# SPDX-License-Identifier: MIT
#
# Copyright (c) 2024 Mikhail Smirnov
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Linux

on: [push, pull_request]

permissions:
  contents: read

jobs:
  build:
    name: "${{matrix.os}} ${{matrix.compiler}} ${{matrix.build_type}} ${{matrix.feature}}"
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        compiler: [clang-18, gcc-14]
        feature:
          - AddressSanitizer
          - LeakSanitizer
          - ThreadSanitizer
          - UndefinedBehaviorSanitizer
        os: [ubuntu-latest]
        include:
          - feature: AddressSanitizer
            sanitizer: ASan
          - feature: LeakSanitizer
            sanitizer: LSan
          - feature: ThreadSanitizer
            sanitizer: TSan
          - feature: UndefinedBehaviorSanitizer
            sanitizer: UBSan
          - compiler: clang-18
            cc: clang-18
            cxx: clang++-18
            packages: clang-18 libc++-18-dev libc++abi-18-dev
          - compiler: gcc-14
            cc: gcc-14
            cxx: g++-14
            packages: g++-14 libstdc++-14-dev

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install
      run: |
        sudo apt-get update
        sudo apt-get install ${{matrix.packages}} cmake libssl-dev liburing-dev libzstd-dev ninja-build
        sudo sysctl vm.mmap_rnd_bits=30
        ${{matrix.cc}} --version
        ${{matrix.cxx}} --version
        cmake --version
        ninja --version
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure
      working-directory: ${{runner.workspace}}/build
      run: |
        echo "CMAKE_BUILD_PARALLEL_LEVEL=$(nproc)" >> $GITHUB_ENV
        echo "CTEST_OUTPUT_ON_FAILURE=1" >> $GITHUB_ENV
        echo "UBSAN_OPTIONS=silence_unsigned_overflow=1" >> $GITHUB_ENV
        cmake \
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
          -DCMAKE_C_COMPILER=${{matrix.cc}} \
          -DCMAKE_CXX_COMPILER=${{matrix.cxx}} \
          -DIO_THREADS_SSL_LIBRARY=openssl \
          -DIO_THREADS_SANITIZER=${{matrix.sanitizer}} \
          -G "Ninja" \
          -S ${{github.workspace}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake --build . --config ${{matrix.build_type}} --target io_threads_tests

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: |
        ctest --build-config ${{matrix.build_type}} --output-on-failure
